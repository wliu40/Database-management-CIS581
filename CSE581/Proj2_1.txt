-- Create Table Employees
CREATE TABLE Employees (
EmployeeId		INTEGER		PRIMARY KEY	IDENTITY(1,1),
FirstName		VARCHAR(50)	NOT NULL,
MiddleName 		VARCHAR(50),
LastName    		VARCHAR(50)	NOT NULL,
EmployeeType		INTEGER		NOT NULL 	REFERENCES EmployeeType(EmployeeTypeId),
SocialSecurityNumber 	VARCHAR(20) 	NOT NULL,
Phone		 	VARCHAR(20) 	NOT NULL,
Salary 			DECIMAL(8,2)	NOT NULL,	CHECK(Salary >= 0)
DateOfBirth		DATETIME,
ReportTo		INTEGER		REFERENCES Employees (EmployeeId)
);


INSERT INTO Employees(FirstName, MiddleName, LastName, EmployeeType, SocialSecurityNumber, Phone, Salary, DateOfBirth, ReportTo)
VALUES 	('Pablo', NULL,'Picasso', 1, '523-05-1256', '265-5123-5636', 150528.00, '1956-05-08', NULL),    
	('Vincent', 'van','Gogh', 2, '408-00-6528', '138-5263-0089', 105005.35, '1978-02-28', 1),
	('Jasper', NULL,'Johns', 3, '526-25-6886', '693-5984-9205', 145235.88, '1983-02-28', 1),          
	('Claude', NULL,'Monet', 3, '845-23-9685', '115-3265-8659', 132000.18, '1990-01-16', 3),       
	('Jackson', NULL,'Pollock', 4, '415-26-8406', '189-9699-1515', 129000.06, '1972-11-11', 1),     
	('Andy', NULL,'Warhol', 4, '529-18-6863', '159-3211-0552', 115096.88, '1969-12-02', 5),		
	('Frida', NULL,'Kahlo', 5, '889-52-3697', '121-5343-0809', 11935.88, '1989-02-28', 1),		
	('Leonardo', 'da','Vinci', 5, '758-96-2015', '569-3152-0385', 105235.88, '1981-12-05', 7);		


-- Create Table EmployeeType(Lookup table)
CREATE TABLE EmployeeType(
EmpolyeeTypeId 		INTEGER		PRIMARY KEY  	IDENTITY(1,1),
Text			VARCHAR(30)	NOT NULL
);


INSERT INTO EmployeeType(Text)
VALUES	('Manager'),
	('Secretary'),
	('Mechanic'),
	('Pilot'),
	('Attendant');
	
-- Create Table CustomerTransaction
CREATE TABLE CustomerTransaction(
TransactionId		INTEGER		PRIMARY KEY 	IDENTITY(1,1),
TicketNumber		INTEGER		NOT NULL 	REFERENCE Tickets(TicketNumber),
Payment			DECIMAL(8,2)	NOT NULL 	CHECK (Payment >= 0)
TransactionMethod	INTEGER 	NOT NULL	REFERENCE TransactionMethodType(TransactionMethodTypeId),
TransactionDate		DATETIME	NOT NULL,
Refunds			DECIMAL(8,2)    CHECK (Refunds >= 0)
Comments		VARCHAR(100)
);

-- all 8 tickets transaction history was inserted, transaction no : 1-8
-- some of the tickets might be perchased at the airport(without reservation)
INSERT INTO CustomerTransaction(TicketNumber, Payment, TransactionMethod, TransactionDate, Refunds, Comments)
VALUES 	(1, 235.62, 1, '2015-05-13', NULL, NULL),
	(2, 563.22, 4, '2015-06-23', 23.63, NULL),
	(3, 128.66, 1, '2015-12-01', 6.11, NULL),	//	
	(4, 366.33, 3, '2016-01-11',NULL, 'failed'),  //the transaction money was not sufficient
	(5, 512.52, 1, '2016-02-13', 20.96, NULL),
	(6, 632.30, 2, '2016-02-28', 200.32, NULL),
	(7, 85.96, 5, '2016-03-02', NULL, NULL),
	(8, 1263.20, 2, '2016-05-09', 322.00, NULL),
	(9, 1391.15, 4, '2016-06-11', 20.00, NULL),
	(10, 163.00, 1, '2016-06-25', 15.00, NULL);


-- Create Table TransactionMethodType (Lookup table)
CREATE TABLE TransactionMethodType(
TransactionMethodTypeId	INTEGER		PRIMARY KEY	IDENTITY(1,1),
Text			VARCHAR(20)	NOT NULL
);

INSERT INTO TransactionMethodType(Text)
VALUES	('Credit Card'),
	('Debit Card'),
	('Check'),
	('Cash'),
	('Mileage'); //


-- Create Table Tickets
CREATE TABLE Tickets(
TicketNumber		INTEGER 	PRIMARY KEY  	IDENTITY(1000,1),
CustomerId		INTEGER 	NOT NULL	REFERENCE Customer(CustomerId),
FlightId		INTEGER		NOT NULL	REFERENCE FlightSchedules(FlightId),
SeatsId			INTEGER		NOT NULL	REFERENCE Seats(SeatsId)
);

--8 Tickets was inserted, tickets no.: 1-8, FlightId(1-5)
INSERT INTO Tickets(CustomerId, FlightId, SeatsId)  
VALUES 	(1, 1, 12),   
	(2, 1, 85),
	(3, 2, 122),
	(4, 3, 11),
	(5, 1, 15),
	(6, 1, 26),
	(7, 4, 110),
	(8, 5, 86),
	(9, 5, 62)
	(10, 6, 65);


-- Create Table Customers
CREATE TABLE Customers(
CustomerId		INTEGER		PRIMARY KEY   	IDENTITY(1,1),
FirstName		VARCHAR(50)	NOT NULL,
MiddleName 		VARCHAR(50),
LastName    		VARCHAR(50)	NOT NULL,
Email			VARCHAR(100),
DateOfBirth		DATETIME	NOT NULL,
FrequentFlyNumber	INTEGER
);

--Insert Customers id: 1-10
INSERT INTO Customers(FirstName,MiddleName,LastName,Email,DateOfBirth,FrequentFlyNumber)
VALUES	('Albert', NULL, 'Einstein', 'aeinstein@syr.edu', '1968-01-04', NULL),
	('Isaac', NULL, 'Newton', 'isnewton@gmail.com', '1963-07-25', NULL),
	('Galileo', NULL, 'Galilei', 'galileog@yahoo.com', '1991-01-13', NULL),
	('Marie', NULL, 'Curie', 'mariec@hotmail.com', '1972-12-01', NULL),
	('Charles', NULL, 'Darwin', 'cdarwin@yahoo.com', '1980-07-11', NULL),
	('Alexander', 'Graham', 'Bell', 'abell@bell.com', '1961-09-09', NULL),
	('Niels', NULL, 'Bohr', 'bohr85@gmail.com', '1975-06-11', NULL),
	('Nikola', NULL, 'Tesla', 'ntesla@tesla.com', '1956-02-03', NULL),
	('James', 'Clerk', 'Maxwell', 'maxwell@gmail.com', '1997-08-20', NULL),
	('Michael', NULL, 'Faraday', 'mfaraday@syr.com', '1990-10-10', NULL);

-- Create Table Reservations
CREATE TABLE Reservations(
ReservationId		INTEGER 	PRIMARY KEY	IDENTITY(1,1),
CustomerId		INTEGER		NOT NULL	REFERENCE Customer(CustomerId),
FlightId		INTEGER		NOT NULL	REFERENCE FlightSchedules(FlightId),
ReservationStatus	INTEGER		NOT NULL	REFERENCE ReservationStatus(StatusId),
ReservationMethod	INTEGER		REFERENCE ReservationMethods(ReservationMethodsId),
DateOfReservation	DATETIME	NOT NULL
);

-- Some tickets was reservated, some ticket was purchased on site, some reservation is not successful, some reservation was cancelled, some is pending, some are failed
INSERT INTO Reservations(CustomerId, FlightId, ReservationStatus, ReservationMethod, DateOfReservation)
VALUES	(1, 1, 1, 1,'2015-05-01'),
	(2, 1, 4, 2,'2015-02-02'),
	(2, 1, 2, 3,'2015-02-03'),
	(4, 3, 1, 1,'2015-11-13'),
	(4, 3, 1, 3,'2015-11-20'),
	(5, 1, 1, 2,'2015-05-01'),
	(6, 1, 1, 4,'2016-01-03'),
	(8, 5, 1, 1,'2016-03-21'),
	(10, 6, 1, 2,'2015-05-16'),
	(3, 2, 4, 1,'2016-06-26');		//pending		


-- Create Table ReservationStatus
CREATE TABLE ReservationStatus(
StatusId		INTEGER		PRIMARY KEY	IDENTITY(1,1),
Text			VARCHAR(20)
);

INSERT INTO ReservationStatus(Text)
VALUES 	('Success'),   1
	('Failed'),    2
	('Pending'),   3
	('Cancelled'); 4
	

-- Create Table ReservationMethods
CREATE TABLE ReservationMethods(
ReservationMethodsId		INTEGER		PRIMARY KEY	IDENTITY(1,1),
Text				VARCHAR(20)
);


INSERT INTO ReservationMethods(Text)
VALUES	('Phone'),
	('Email'),
	('Website'),
	('Onsite');


-- Create Table Invoices
CREATE TABLE Invoices(
InvoiceId		INTEGER		PRIMARY KEY     IDENTITY(1,1),
TicketNumber		INTEGER		NOT NULL	REFERENCE Tickets(TicketNumber),
Fees			DECIMAL(8,2)	NOT NULL	CHECK (Fees >= 0),
Taxes			DECIMAL(8,2)	NOT NULL	CHECK (Taxes >= 0),
Fare			DECIMAL(8,2)	NOT NULL	CHECK (Fare >= 0),
Discount		DECIMAL(8,2)    CHECK (Discount >= 0)
);

--should insert 8 records for 8 tickets 
INSERT INTO Invoices(TicketNumber, Fees, Taxes, Fares, Discount) 
VALUES	(1, 235.62, 18.85, 15.00, 5.00),
	(2, 563.25, 45.06, 20.00, 0.00),
	(3, 128.80, 12.88, 10.00, 15.00),
	(4, 369.12, 31.38, 0.00, 35.00),
	(5, 1235.62, 98.85, 15.00, 20.00),
	(6, 935.71, 74.86, 50.00, 0.00),
	(7, 95.00, 7.6, 0.00, 0.00),
	(8, 199.22, 15.94, 15.00, 5.00);




-- Create Table Seats
CARETE TABLE Seats(
SeatsId			INTEGER		PRIMARY KEY 	IDENTITY(1,1),
AirplaneId		INTEGER		NOT NULL        REFERENCE  Airplanes(AirplaneId),
SeatClassId		INTEGER		NOT NULL	REFERENCE  SeatClass(SeatClassId),
RowNumber 		INTEGER		NOT NULL	CHECK(RowNumber >= 1)
);

INSERT INTO Seats(AirplaneId, SeatClassId, RowNumber)
VALUES	(1, 1, 1),   
	(1, 2, 2),   
	(1, 3, 3),   
	(2, 1, 1),   
	(2, 2, 1),   
	(3, 2, 1),   
	(4, 1, 1),   
	(5, 3, 1),   
	(6, 2, 1),   
	(7, 1, 1);   

-- Create Table SeatClass(Lookup table)
CREATE TABLE SeatClass(
SeatClassId		INTEGER		PRIMARY KEY     IDENTITY(1,1),
Text			VARCHAR(30) 	NOT NULL
);

INSERT INTO SeatClass(Text)
VALUES	('First Class'),
	('Business Class'),
	('Economy Class');

-- Create Table FlightSchedules
CREATE TABLE FlightSchedules(
FlightId		INTEGER		PRIMARY KEY	IDENTITY(1,1),
Route			INTEGER		NOT NULL	REFERENCE Routes(RouteId),
AirplaneId		INTEGER		NOT NULL	REFERENCE Airplane(AirplaneId),
FlightNumber		NOT NULL
);


INSERT INTO FlightSchedules(DepartAirportId, ArrivalAirportId, DepartTime, ArrivalTime)
VALUES	(2, 1, '2015-05-01'),
	(2, 1, '2015-05-01');



-- Create Table Routes
CREATE TABLE Routes(
RouteId			INTEGER		PRIMARY KEY	IDENTITY(1,1),
DepartureAirportId	INTEGER		NOT NULL	REFERENCE  Airports(AirportId),
ArrivalAirportId	INTEGER		NOT NULL	REFERENCE  Airports(AirportId),
FlightDistance		INTEGER,
FlightDuration		INTEGER,
);


-- Create Table Airplanes
CREATE TABLE Airplanes(
AirplaneId		INTEGER 	PRIMARY KEY 	IDENTITY(1,1),
AirplaneModel		INTEGER		NOT NULL	REFERENCE AirplanModel(AirplaneModelId),
Availability		INTEGER		NOT NULL	REFERENCE AvailabilityStatus(AvailabilityId)
CurrentLocation		INTEGER		REFERENCE Airports(AirportId)
);

INSERT INTO Airplanes(AirplaneModel,Availability)
VALUES 	(458795,1234),
	(478548,2457),
	(457956,2145),
	(458745,5698),
	(147852,1458),
	(889562,2586);


-- Create Table Airports
CREATE TABLE Airports(
--AirportId		INTEGER		PRIMARY KEY 	IDENTITY(1,1),
AirportId		VARCHAR(10)	PRIMARY KEY,
AirportName		VARCHAR(300)	NOT NULL,
HangarCapacity		INTEGER		NOT NULL
);

INSERT TABLE Airports(AirportName, HangarCapacity)
VALUES	(Chicago O'Hare International Airport, 40),  		//ORD
	(Syracuse Hancock International Airport, 10),	 	//SYR
	(John F. Kennedy International Airport, 45),		//JFK
	(San Diego International Airport, 35),			//SAN
	(Seattle¨CTacoma International Airport, 30),		//SEA
	(Colorado Springs Airport, 20),				//COS
	(Houston George Bush Intercontinental Airport, 40),	//IAH
	(Miami International Airport, 30), 			//MIA
	

-- Create Table AirplaneCanLandAirports
CREATE TABLE AirplaneCanLandAirports(
AirportId		INTEGER		PRIMARY KEY	REFERENCE  Airports(AirportId),
AirplaneId		INTEGER		PRIMARY KEY	REFERENCE  Airplanes(AirplaneId)
);

INSERT INTO AirplaneCanLandAirports(AirportId, AirplaneId)
VALUES 	();


-- Create Table AirportFees
CREATE TABLE AirportFees(
FeesId			INTEGER		PRIMARY KEY 	IDENTITY(1,1),
AirportId		INTEGER		NOT NULL	REFERENCE  Airports(AirportId),
StateTaxesFees		DECIMAL(10,2)	NOT NULL,
CityTaxesFees		DECIMAL(10,2)	NOT NULL,
OtherFees		DECIMAL(10,2),
);


-- Create Table AirportLocation
CREATE TABLE AirportLocation(
AirportId		INTEGER		PRIMARY KEY 	REFERENCE  Airports(AirportId),
City			VARCHAR(50)	NOT NULL,
State			VARCHAR(50)	NOT NULL,
);

-- Create Table Terminals
CREATE TABLE Terminals(
TerminalId		VARCHAR(20)	PRIMARY KEY,
AirportId		INTEGER		NOT NULL	REFERENCE  Airports(AirportId),
TerminalName		VARCHAR(20)
);

-- Create Table Gates
CREATE TABLE Gates(
GatesId			VARCHAR(20)	PRIMARY KEY,
TerminalId		INTEGER		NOT NULL	REFERENCE Terminals(TerminalId),
GateText		VARCHAR(20)
);

INSERT INTO Gates(GatesId,TerminalId,GateText)
VALUES 	(55800,'1947-09-09',2,158,200000,200),
---------------------------------------------------------------------------------------------------------------
-- Create Table MaintenanceRecords
CREATE TABLE MaintenanceRecords(
EmployeeId		INTEGER		PRIMARY KEY 	REFERENCE  Employees(EmployeeId),
MaintenanceId		INTEGER		PRIMARY KEY 	REFERENCE  PlaneMaintenances(MaintenanceId)
);

--EmployeeId are 3 and 4
INSERT INTO MaintenanceRecords(EmployeeId, MaintenanceId)
VALUES	(3, 1),
	(3, 2),
	(3, 3),
	(3, 5),
	(4, 1),
	(4, 2),
	(4, 4),
	(4, 6);


-- Create Table PlaneMaintenances
CREATE TABLE PlaneMaintenances(
MaintenanceId		INTEGER		PRIMARY KEY	IDENTITY(1,1),
AirplaneId		INTEGER		NOT NULL	REFERENCE  Airplanes(AirplaneId),
MaintenanceLogId	INTEGER		NOT NULL	REFERENCE  MaintenanceLog(MaintenanceLogId),
StartTime		DATETIME	NOT NULL,
FinishTime		DATETIME	NOT NULL,
Status			INTEGER		NOT NULL	REFERENCE  PlaneMaintenanceStatus(StatusId)
);

INSERT INTO PlaneMaintenances(AirplaneId, MaintenanceLogId, StartTime, FinishTime)
VALUES	(1, 1, '2013-07-01', '2013-07-13', 1),
	(1, 2, '2013-07-03', '2013-07-04', 2),
	(2, 3, '2014-08-13', '2014-08-14', 3),
	(3, 4, '2015-01-25', '2015-01-26', 1),
	(5, 5, '2015-07-18', '2015-07-19', 1),
	(6, 6, '2016-01-03', '2016-01-15', 3),
	(7, 7, '2016-02-28', '2016-03-01', 1),


-- Create Table PlaneMaintenanceStatus (Lookup table)
CREATE TABLE PlaneMaintenanceStatus(
StatusId		INTEGER		PRIMARY KEY	IDENTITY(1,1),
Text			VARCHAR(20)	NOT NULL
);

INSERT INTO PlaneMaintenanceStatus(Text)
VALUES	('Completion on time'),
	('Completion in advance'),
	('Completion overdue'),
	('Not completed');
	

-- Create Table MaintenanceLog (Lookup table)
CRATE TABLE MaintenanceLog(
MaintenanceLogId	INTEGER		PRIMARY KEY	IDENTITY(1,1),
Classification		VARCHAR(1)	NOT NULL,
Comments		VARCHAR(1000)
);


INSERT INTO MaintenanceLog(Text)
VALUES	('D', 'Engine check and repaire'),
	('A', 'Tire pressure check and rotation check'),
	('B', 'Oil filter replaced'),
	('C', 'Radar repaired'),
	('B', 'Aircraft altimeter check and repaire'),
	('A', 'Radio system check'),
	('B', 'Oil supply system check'),
	('C', 'Stabilizer maintenance');


	
-- Create Table AirplanModel
CREATE TABLE AirplanModel(
AirplaneModelId		INTEGER 	PRIMARY KEY 	IDENTITY(1,1),
PropulsionType		INTEGER		NOT NULL	REFERENCE PropulsionDetails(PropulsionTypeId),
BuiltDate		DATETIME	NOT NULL,
NumberOfPilots		INTEGER		NOT NULL,
NumberOfAttendants	INTEGER		NOT NULL,
FlyRange		INTEGER		NOT NULL,
Manufacturer		INTEGER		NOT NULL	REFERENCE PlaneManufacturer(ManufacturerId),
TotalSeats		INTEGER		NOT NULL,
FuelLoad		INTEGER		NOT NULL
);


INSERT INTO AirplanModel(PropulsionType,BuiltDate,NumberOfPilots,NumberOfAttendants,FlyRange,Manufacturer,TotalSeats)
VALUES 	(1,'1947-09-09',2,158,200000,200),
	(2,'1945-09-19',4,254,400000,270),
	(1,'1998-12-05',3,122,200000,150),
	(1,'2002-01-14',3,45,150000,100),
	(3,'2010-10-23',6,432,700000,450),
	(4,'1999-05-08',4,124,350000,135),
	(78950,'2015-11-28',6,332,45000,350);


-- Create Table PropulsionDetails(Lookup table)
CREATE TABLE PropulsionDetails(
PropulsionTypeId	INTEGER 	PRIMARY KEY 	IDENTITY(1,1),
Text			VARCHAR(50)	NOT NULL
);

INSERT INTO PropulsionDetails(Text)
VALUES 	('Turbo jet'),
	('Turbo prop'),
	('Turbo fan'),
	('Ram jet'),
	('Scramjet');


-- Create Table PlaneEntertainmentOptions
CREATE TABLE PlaneEntertainmentOptions(
AirplaneModelId		INTEGER 	PRIMARY KEY 	REFERENCE AirplaneModel(AirplaneModelId),
EntertainmentTypeId	INTEGER 	PRIMARY KEY 	REFERENCE EntertainmentDetails(EntertainmentTypeId)
);


-- Create Table EntertainmentDetails (Lookup table)
CREATE TABLE EntertainmentDetails(
EntertainmentTypeId	INTEGER 	PRIMARY KEY 	IDENTITY(1,1),
Text			VARCHAR(50)	NOT NULL
);


INSERT INTO EntertainmentDetails(Text)
VALUES 	('Moving-map systems'),
	('Audio entertainment'),
	('Video entertainment'),
	('Personal televisions'),
	('In-flight movies'),
	('In-flight games');



-- Create Table PlaneManufacturer (Lookup table)
CREATE TABLE PlaneManufacturer(
ManufacturerId		INTEGER 	PRIMARY KEY 	IDENTITY(1,1),
Text			VARCHAR(50)	NOT NULL	
);

INSERT INTO PlaneManufacturer(Text)
VALUES 	('Airbus'),
	('Boeing'),
	('Bombardier'),
	('Embraer'),
	('Aerei da Trasporto Regionale')
	('Ilyushin'),
	('Comac');





-- Create Table AvailabilityStatus (Lookup table)
CREATE TABLE AvailabilityStatus(
AvailabilityId		INTEGER		PRIMARY KEY 	IDENTITY(1,1),
Text			VARCHAR(10)	NOT NULL
);


INSERT INTO AvailabilityStatus(Text)
VALUES 	('Available'),
	('Not Available');


-- Create Table FlightTimes
CREATE TABLE FlightTimes(
FlightId		INTEGER		PRIMARY KEY	REFERENCE FlightSchedules(FlightId),
ScheduleDepartureTime 	DATETIME	NOT NULL,
ScheduledArrivalTime	DATETIME	NOT NULL,
ProjectedDepartureTime	DATETIME,
ProjectedArrivalTime	DATETIME,
ActualDepartureTime 	DATETIME,
ActualArrivalTime	DATETIME,
);

INSERT INTO FlightTimes(FlightId, ScheduleDepartureTime, ScheduledArrivalTime, ProjectedDepartureTime, ProjectedArrivalTime, ActualDepartureTime, ActualArrivalTime)
VALUES 	();


-- Create Table FlightGates
CREATE TABLE FlightGates(
FlightId		INTEGER		PRIMARY KEY	REFERENCE FlightSchedules(FlightId),
ScheduleDepartureGate	VARCHAR(20)	NOT NULL	REFERENCE Gates(GatesId),
ScheduleArrivalGate	VARCHAR(20)	NOT NULL	REFERENCE Gates(GatesId),
ActualDepartureGate	VARCHAR(20)	REFERENCE Gates(GatesId),
ActualArrivalGate	VARCHAR(20)	REFERENCE Gates(GatesId)
);



INSERT INTO FlightLegs(FlightId, ScheduleDepartureGate, ScheduleArrivalGate, ActualDepartureGate, ActualArrivalGate)
VALUES 	();

	


-------
